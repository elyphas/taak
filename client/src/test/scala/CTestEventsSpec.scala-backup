package client_testear

import outwatch.dom._
import outwatch.dom.dsl._
import outwatch.dom.helpers._
import outwatch.dom.interpreter._

import outwatch.ext.monix._

import outwatch.ext.monix.handler._
import cats.effect.{IO, SyncIO}
import client_testear.Deprecated.IgnoreWarnings.initEvent
import org.scalajs.dom.{document, html, Element}

import manik1.modules.FrmComparative

import client_testear.Deprecated.IgnoreWarnings.initEvent

class CTestEventsSpec extends JSDomAsyncSpec  {

  def sendEvent(elem: Element, eventType: String) = {
    val event = document.createEvent("Events")
    initEvent(event)(eventType, canBubbleArg = true, cancelableArg = false)
    elem.dispatchEvent(event)
  }

  it should "be able to render basic handler" in {
    val counter: VDomModifier = button(
      id := "click",
      Handler.create[Int](0).map { handler =>
        VDomModifier(onClick(handler.map(_ + 1)) --> handler, handler)
      }
    )

    val vtree = div(counter)

    OutWatch.renderInto[IO]("#app", vtree).map { _ =>
      val element = document.getElementById("click")

      element.innerHTML shouldBe "0"

      sendEvent(element, "click")
      element.innerHTML shouldBe "1"

      sendEvent(element, "click")

      println(s"El valor de element.innerHTML: ${element.innerHTML}")

      element.innerHTML shouldBe "2"
    }
  }

}